{
  "name": "coc-pyright",
  "version": "1.1.51",
  "description": "Pyright extension for coc.nvim",
  "author": "Heyward Fann <fannheyward@gmail.com>",
  "license": "MIT",
  "main": "lib/index.js",
  "keywords": [
    "coc.nvim",
    "python",
    "pyright"
  ],
  "engines": {
    "coc": "^0.0.70"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/fannheyward/coc-pyright.git"
  },
  "activationEvents": [
    "onLanguage:python",
    "workspaceContains:pyrightconfig.json",
    "workspaceContains:mspythonconfig.json"
  ],
  "scripts": {
    "server": "./build_server.sh",
    "clean": "rimraf lib",
    "watch": "webpack --watch",
    "build": "webpack",
    "prepare": "npm-run-all clean build"
  },
  "devDependencies": {
    "@types/node": "^14.0.13",
    "coc.nvim": "^0.0.77",
    "npm-run-all": "^4.1.5",
    "rimraf": "^3.0.0",
    "ts-loader": "^7.0.5",
    "typescript": "^3.9.5",
    "webpack": "^4.43.0",
    "webpack-cli": "^3.3.10"
  },
  "contributes": {
    "jsonValidation": [
      {
        "fileMatch": "pyrightconfig.json",
        "url": "./schemas/pyrightconfig.schema.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "coc-pyright configuration",
      "properties": {
        "python.analysis.typeshedPaths": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Paths to look for typeshed modules.",
          "scope": "resource"
        },
        "python.analysis.autoSearchPaths": {
          "type": "boolean",
          "default": true,
          "description": "Automatically add common search paths like 'src'?",
          "scope": "resource"
        },
        "python.analysis.stubPath": {
          "type": "string",
          "default": "",
          "description": "Path to directory containing custom type stub files.",
          "scope": "resource"
        },
        "python.analysis.diagnosticMode": {
          "type": "string",
          "default": "openFilesOnly",
          "enum": [
            "openFilesOnly",
            "workspace"
          ],
          "enumDescriptions": [
            "Analyzes and reports errors on only open files.",
            "Analyzes and reports errors on all files in the workspace."
          ],
          "scope": "resource"
        },
        "python.analysis.diagnosticSeverityOverrides": {
          "type": "object",
          "default": {},
          "description": "Allows a user to override the severity levels for individual diagnostics.",
          "additionalProperties": {
            "type": "string",
            "enum": [
              "none",
              "warning",
              "information",
              "error"
            ]
          },
          "scope": "resource"
        },
        "python.analysis.logLevel": {
          "type": "string",
          "default": "info",
          "description": "Specifies the level of logging for the Output panel",
          "enum": [
            "error",
            "warning",
            "info",
            "trace"
          ]
        },
        "python.analysis.typeCheckingMode": {
          "type": "string",
          "default": "basic",
          "enum": [
            "off",
            "basic",
            "strict"
          ],
          "description": "Defines the default rule set for type checking.",
          "scope": "resource"
        },
        "python.pythonPath": {
          "type": "string",
          "default": "python",
          "description": "Path to Python, you can use a custom version of Python.",
          "scope": "resource"
        },
        "python.venvPath": {
          "type": "string",
          "default": "",
          "description": "Path to folder with a list of Virtual Environments.",
          "scope": "resource"
        },
        "pyright.disableCompletion": {
          "type": "boolean",
          "default": false,
          "description": "Disable completion only."
        },
        "pyright.disableLanguageServices": {
          "type": "boolean",
          "default": false,
          "description": "Disables type completion, definitions, and references.",
          "scope": "resource"
        },
        "pyright.disableOrganizeImports": {
          "type": "boolean",
          "default": false,
          "description": "Disables the `Organize Imports` command.",
          "scope": "resource"
        },
        "pyright.useLibraryCodeForTypes": {
          "type": "boolean",
          "default": false,
          "description": "Use library implementations to extract type information.",
          "scope": "resource"
        }
      }
    },
    "commands": [
      {
        "command": "pyright.organizeimports",
        "title": "Organize Imports",
        "category": "Pyright"
      },
      {
        "command": "pyright.createtypestub",
        "title": "Creates Type Stubs with given module name",
        "category": "Pyright"
      }
    ]
  }
}
